『plain2のHTMLテーブル拡張』
        by KOBAYASHI Kenichi
        2002/01/06

[[C
このファイルはplain2用ファイルです。そのままでも読めますが、plain2で処
理するとより読みやすくなります。
]]C

1. plain2のHTMLテーブル拡張について

plain2はプレーンテキストをそのまま見目よいTeX/HTML/roff形式に変換で
きる便利なツールである。しかし、HTML形式の場合にはテーブルと図を出力
するためにLaTeXなどの他のツールを使っていったんGIF画像に変換してやら
なければならないという問題があった。

そこで、plain2を改良してテーブルを直接HTMLで出力するようにした。他に
リンク(外部参照)などの便利な機能をいくつか拡張した。


1.1. 拡張機能

 - テーブルをHTMLの<TABLE>タグを使って描画

   これにより、図を使わない場合はLaTeX処理系他が不要になり、編集作業
   がすばやく快適に行なえるようになる。GIF画像の読み込みが不要になる
   ので、ページの読み込みも速くなる。

   筆者のように、表をよく使う技術系文章を大量に書く人にとって、この
   機能はとても便利である。

 - 後方互換性の完全な維持

   従来のHTML出力形式をそのまま出力するモードを用意したので、気兼ね
   無く従来のplain2を差し換えることができる。

 - リンク(外部参照)機能の追加

   ハイパーリンクのための機能を追加した。TeX形式やroff形式にも対応す
   る。

 - 出力形式を限定しないマークアップ

   今まではTeXやHTMLのマークアップをするとTeX専用のplain2文章や
   HTML専用のplain2文章になってしまった。これでは本来TeXにもHTMLにも使
   い回せるはずのplain2の魅力が損なわれてしまう。これを解決するため
   に、出力形式別のマークアップ機能を追加した。

 - 見映えの改善

   従来のHTML出力形式では、<A…>…</A> で囲まれるアンカーの範囲が
   "GO"や"(here)"となって見映えが悪かったので改善した。また、改行の量
   や位置をプレーンテキストやTeX形式に極力近づけた。

 - フットノート機能の追加

   従来のHTML出力形式には無かったフットノート機能を追加した。

 - 添え字機能の追加

   TeXのmathモードのような上付き/下付き添え字をすべての出力形式で扱え
   るようにした。

 - その他のささやかな修正

1.2. その他のツール

 - plain2のHTML出力に自動的にインデックスを付加するPerlスクリプト
   p2hindexを作成した。

 - plain2のフロントエンドplain2htmlを拡張した。


2. 拡張機能の詳細

2.1. テーブルのHTMLによる描画

従来はTeX(や他のツール)に頼っていたテーブルの描画を、HTMLで直接行な
うようにした。plain2のマニュアルから例を抜粋する。

2.1.1. 例1 枠のないテーブル

[[E
      鯵      あじ            100
      鮃      ひらめ          200
      鰤      ぶり           2000
      鰹      かつお          800
]]E

      鯵      あじ            100
      鮃      ひらめ          200
      鰤      ぶり           2000
      鰹      かつお          800

2.1.2. 例2 枠のあるテーブル

[[E
      -------------------------
      |  ？   |  よみかた     |
      |=======================|
      |  鯣   |  するめ       |
      |-------+---------------|
      |  鯡   |  にしん       |
      |-------+---------------|
      |  鯰   |  なまず       |
      |-------+---------------|
      |  鰡   |  ぼら         |
      -------------------------
]]E

      -------------------------
      |  ？   |  よみかた     |
      |=======================|
      |  鯣   |  するめ       |
      |-------+---------------|
      |  鯡   |  にしん       |
      |-------+---------------|
      |  鯰   |  なまず       |
      |-------+---------------|
      |  鰡   |  ぼら         |
      -------------------------

2.1.3. 例3 複雑なテーブル

[[E
      ---------------------------------
      |へん||つくり|  字  |  よみかた |
      |===============================|
      | 金 ||      |  錫  |  すず     |
      |----||  易  |------+-----------+
      |    ||      |  鯣  |  するめ   |
      |    ||------+------+-----------+
      | 魚 ||  非  |  鯡  |  にしん   |
      |    ||------+------+-----------+
      |    ||      |  鯰  |  なまず   |
      |----||  念  |------+-----------+
      | 手 ||      |  捻  |  ひねる   |
      |--------------------------------
]]E

      ---------------------------------
      |へん||つくり|  字  |  よみかた |
      |===============================|
      | 金 ||      |  錫  |  すず     |
      |----||  易  |------+-----------+
      |    ||      |  鯣  |  するめ   |
      |    ||------+------+-----------+
      | 魚 ||  非  |  鯡  |  にしん   |
      |    ||------+------+-----------+
      |    ||      |  鯰  |  なまず   |
      |----||  念  |------+-----------+
      | 手 ||      |  捻  |  ひねる   |
      |--------------------------------


2.1.4. 例4 お手軽にテーブル

例えば、データの並びを以下のようにそのまま書くだけで、きれいなテーブ
ルができるので、急いでいるときに有意義である。例はダイスを1000回振っ
たときの分布。

[[E
目     回数
====================
  1     156
  2     153
  3     171
  4     175
  5     175
  6     170
]]E

目     回数
====================
  1     156
  2     153
  3     171
  4     175
  5     175
  6     170

各テーブルの<TABLE>タグには、tbl:0, tbl:1, ...というidが自動的に付けら
れるので、CSSやhrefの飛び先に指定できる。


2.2. 従来のHTML出力との互換性

plain2のHTML形式をスクリプトで加工して使っている人も多いだろう。新し
いHTML形式でもたいていはそのまま使えると思われるが、100%ではない。

そこで従来のHTML形式をそのまま出力する互換モードを用意した。実行時に
-htmlオプションの代りに-htmloldオプションを指定すると、従来のHTML出
力形式のままで出力する。以下にまとめを記す。

------------------------------------------------------------------------
| オプション              | 効果                                       |
|=========================|============================================|
| -htmlonce               | PICをそのまま出力                          |
|-------------------------|--------------------------------------------|
| -htmlold                | 古いHTML出力形式                           |
|-------------------------|--------------------------------------------|
| -htmlold -htmlonce      | 古いHTML出力形式での -htmlonce に相当      |
|-------------------------|--------------------------------------------|
| -htmlold -htmlonce -raw | 古いHTML出力形式での -htmlonce -raw に相当 |
------------------------------------------------------------------------

絵を含んだplain2文章を編集する場合、編集時は-htmlonceオプションを使っ
てプレビューし、本番はplain2htmlを使ってLeTeXかroffで絵を処理する、
という使い方が便利である。roff形式の方が処理が速く出力される絵の質が
高いのでおすすめである(日本語化groffが必要)。


2.3. リンク(外部参照)機能

HTMLを使うからには、リンク(外部参照)も扱えた方が便利である。そこでイ
ンラインヒント((r((h))))を追加した。

>> plain2ソース:
>> ((h google http://www.google.com/intl/ja/))でサーチ!

は

>> HTML出力:
>> googleでサーチ!
>> ￣￣￣

このように、最後の単語をURLとみなし、それ以前の部分をアンカー文字列
にする。単語の区切りは半角スペース。

>> TeX出力:
>> google†でサーチ!
>> ────
>> †http://www.google.com/intl/ja/

TeXやroffモードでは外部参照はURLをフットノートに出力する。


なお、((r((h…))))の中が1語の場合はアンカーにもURLにも使われる。

>> plain2ソース:
>> ((h http://www.google.com/intl/ja/))でサーチ!
>>
>> HTML出力:
>> http://www.google.com/intl/ja/でサーチ!
>> ￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
>> TeX出力:
>> http://www.google.com/intl/ja/でサーチ!


2.4. 出力形式別マークアップ

いままではインラインヒント((r((r))))を使って特定の出力形式専用のマークアッ
プをしていたが、これではTeXのマークアップをした文章はHTMLでは使えな
くなってしまう。そこで、インラインヒントとして、((r((mh…))))
、((r((mt…))))、((r((mr…))))
を追加した。

---------------------------------------------------------
|出力形式 | ((mh…))    | ((mt…))      | ((mr…))      |
=========================================================
|HTML     | raw出力     | 出力無し      | 出力無し      |
|TeX      | 出力無し    | raw出力       | 出力無し      |
|roff     | 出力無し    | 出力無し      | raw出力       |
---------------------------------------------------------

>> 例
>> ((mh html))((mt tex))((mr roff))
>>
>> HTML出力:
>>   <P>
>>    html
>>   </P>
>>
>> TeX出力:
>>   \par
>>    tex
>>
>> roff出力:
>>   .P
>>    roff

たとえば、今までTeX用マークアップをした文章は((r((r))を((r((mt))に置
換すればそのままHTML出力ができるようになる。逆もまた同じ。

また、ブロックヒント[[R… ]]Rについても同じことが言えるので、マーク
アップ用のブロックヒントとして、[[MH…]]M、[[MT…]]M、[[MR…]]Mを追
加した。

---------------------------------------------------------
|出力形式 | [[MH…]]M   | [[MT…]]M     | [[MR…]]M     |
=========================================================
|HTML     | raw出力     | コメント      | コメント      |
|TeX      | コメント    | raw出力       | コメント      |
|roff     | コメント    | コメント      | raw出力       |
---------------------------------------------------------


2.5. 見映えの改善

内部参照(TeXの\ref機能)を使うと、従来のHTML形式ではアンカーは"GO"に
固定だった。これを、ラベル名をアンカー文字列として使うように変更した。

例えば、

>> plain2ソース:
>> 図.((x人口の推移))を参照のこと。
>>
>> TeX出力:
>> 図.3を参照のこと。
>>
>> HTML出力:
>> 図.人口の推移を参照のこと。
>>    ￣￣￣￣￣

となる。

また、従来のHTMLモードでは参照先のアンカーは"(here)"という固定文字列
が使われていたが、これも参照先のキャプションがアンカーとして使われる
ようにした。

他に以下の改善を行った。

 - HTMLのパラグラフ(<P>)はTeXの\parなどに比べて改行を伴うので、どうし
   ても改行の量が間延びしていたり位置が不自然だったりしていた。そこで、
   改行をできるだけ元のプレーンテキストやTeX形式出力と同じように出力す
   るようにした。

 - 一部のブラウザではHTMLソースの日本語の中に改行があると余分なスペー
   スを入れてしまうので、改行位置を調整してスペースができるだけ文章の
   切れ目に来るようにした。

 - センタリングや右寄せもサポートした。


2.6. フットノート

TeXモードなどでは使えるフットノート用のインラインヒント((r((f))))を
扱えるようにした。

>> plain2ソース:
>> フットノート((fここに置かれる))が使えるようになりました。
>>
>> HTML出力:
>> フットノート*1が使えるようになりました。
>>
>>      ─────────────────────
>>       *1 ここに置かれる
>>      ─────────────────────

実際の例はこれ((fフットノートの例))。

-hfl オプションを指定すると、以下のようにページの最後にまとめて置かれ
るように変わる。好みのスタイルを選んで欲しい。

>> HTML出力:
>> フットノート*1が使えるようになりました。
>>      ・
>>      ・
>>      ・
>> ─────────────────────
>>  *1 ここに置かれる


2.7. 添え字

簡単な数式を書くときなど、添え字は出力形式を気にしないで気軽に扱いたい。
そこで、添え字を簡単に書くためにインラインヒント((r(($…))))を追加した。

これはTeXのmathモードに似ている。((r"(($"))と"))"の間に囲まれた領域で
は、"_"(アンダーバー)と"^"(ハット) は特別な意味を持つ。

"_"の次の1文字は下付き文字になり、"^"の次の1文字は上付き文字になる。ま
た、"_{…} "というように"_"の後を中括弧で囲むと、囲んだ領域全体が下付
き文字になる。これは"^"の場合でも同じである。TeXでの添え字と同じである。
((f しかしながら、TeXのmathモードの他の機能は持たない。))

この機能は、roff/TeX/HTMLの全ての形式で使える。ただし、roff形式だけは
文字が下付きや上付きにならずに普通の文字と同じく表示される。((f 理由は、
筆者がroff形式をよく知らない上に、めったに使わないためである。))

簡単な例を示す。

例1:
[[E
 集合 (($ S_k = {a_0^2, a_1^2, ... a_{n-1}^2})) のうち、
]]E
 集合 (($ S_k = {a_0^2, a_1^2, ... a_{n-1}^2})) のうち、

例2:
[[E
 LaTeXのロゴもどき = (($ L^AT_EX ))
]]E
 LaTeXのロゴもどき = (($ L^AT_EX ))


2.8. 起動時オプション

-tstyle="css":
 HTMLモードで-tstyleオプションを指定すると、CSSファイルの指定になり、
 ヘッダにCSSファイル"css"を含める<LINK>タグを追加する。

-htmlonce:
 HTMLモードで図(文字画)をそのまま出力する。

-htmlold:
 昔のHTML形式で出力する。拡張機能は無効になる。

-hfl:
 フットノートをページの最後にまとめて出力する。この場合、フットマークと
 フットノートテキストの間が離れてしまうのでハイパーリンクで結ぶ。


2.9. ヘッダ

以下のように、ヘッダ部とボディ部をきちんと区別する構造となった。

<HTML>
<HEAD>
  <META 文字コード指定>
  <TITLE>タイトル<TITLE>
  <META 著者>
</HEAD>
<BODY>
  <H1>タイトル</H1>
    ・
    ・
    ・
</BODY>
</HTML>

このとき、ヘッダ部のタイトル、文字コード、著者は自動的に設定される。
ユーザ定義ファイルのTITLEマクロは、ボディ部でタイトルを表現するため
にのみ使われる。

-nopre (プリアンブル無し)オプション を指定すると、<BODY>以前と
</BODY>以後が取り払われて以下のように出力される。

[[E
  <H1>タイトル</H1>
    ・
    ・
    ・
]]E

2.10. 標準フォーマット定義

HTML出力形式で標準で使われる出力フォーマットを示す。これらは((b -f))オ
プションでユーザが再定義可能である。

----------------------------------------------------------------------
機能名		定義
======================================================================
DOC_BEGIN	"<HTML>\n<HEAD>\n"
DOC_END		"</BODY>\n</HTML>\n"
PLAIN_BEGIN	"<P>\n"
PLAIN_END	"</P>\n"
EXAM_BEGIN	"<PRE>\n"
EXAM_END	"</PRE>\n"
APDX_BEGIN	"<!-- appendix -->\n"
APPENDIX	"\n<H2><A name=\"@1\">@1</A></H2>\n"
BLANK		"<BR>\n"
PAGE		"\n<HR>\n"
NEWLINE		"<BR>\n"
CENTER_BEGIN	"<DIV align=\"center\">\n"
CENTER_END	"</DIV>\n"
RIGHT_BEGIN	"<DIV align=\"right\">\n"
RIGHT_END	"</DIV>\n"
INDENT		"<BLOCKQUOTE>\n"
INDENT0		"</BLOCKQUOTE>\n"
FOOTN_BEGIN	"<SMALL>"
FOOTN_END	"</SMALL>"
REFER_BEGIN	"<A href=\"#"
REFER_END	"\">"
BOLD_BEGIN	"<B>"
BOLD_END	"</B>"
INDEX_BEGIN	"<A name=\""
INDEX_END	"\">"
SECTION_1	"\n<H2><A name=\"@1\">@1</A></H2>\n"
SECTION_2	"\n<H3><A name=\"@1\">@1</A></H3>\n"
SECTION_3	"\n<H4>@1</H4>\n"
SECTION_4	"\n<H5>@1</H5>\n"
SECTION_5	"\n<H6>@1</H6>\n"
SECTION		""
SETSEC_1	""
SETSEC_2	""
SETSEC_3	""
SETSEC_4	""
SETSEC_5	""
TITLE		"<H1>&1</H1>\n<TABLE width=\"100%\">\n
		 <TR><TD>&3</TD><TD align=\"right\">&2</TD></TR>\n
		 <TR><TD>&4 &6</TD><TD align=\"right\">&5</TD></TR>\n
		 <TR><TD>&7</TD></TR>\n</TABLE>\n<HR>\n"
----------------------------------------------------------------------

 - FOOTN_BEGINとFOOTN_ENDの役割はフットノートテキストのスタイルを決め
   るのみ。

 - セクションタイトルをアンカーにしたい場合、またはインデックスにセク
   ションタイトルへのリンクを張りたい場合は、上記のSECTION_1や
   SECTION_2の定義のように、<A name="…">タグを含めること。


2.11. バグ修正

 - 内部コードがEUCの時に-sjisオプションが効かないバグを修正した。

 - 解析処理に邪魔になる行末コード'\r'を除去するようにした。

 - HTMLモードで例示ブロックが適切な漢字コードに変換されないバグを修
   正した。ただし、互換モード(-htmlold)では以前のまま。

 - [[C〜]]Cで括るコメント領域内に連続するハイフン"--"がある場合、"- -"
   と分割するようにした。


3. Tips

 - <BODY>タグの属性を指定する
   → DOC_BEGINマクロでCSSを使って指定する

 - ヘッダに<META>タグを追加する
   → DOC_BEGINマクロを使う

 - テーブルにしたいのにテーブルにならない場合
   → フィールドとフィードの間隔を広くする
   → -table=100 オプションを付ける
   → ブロックヒント[[T…]]Tで囲む

 - セクションの番号を付けるのが面倒な場合
   → -renum オプションを使う
   → emacs系エディタなら、知念@NAISTさん作の plain2-mode.el を使うと便利


4. ツール

4.1. p2hindex

plain2で作成されたHTMLファイルにインデックスを付けるPerlスクリプトを
作成した。以下の機能を持つ。

 - インデックスを次の3つのスタイルから選んで付ける
   o リスト型
   o テーブル型
   o 別フレーム
 - 文章中のURIをハイパーリンクに自動変換
 - 文末に最終更新日を付加
 - ファイルのインクルード

使い方はp2hindexのヘルプを参照のこと。

4.1.1. 基本的な使い方

plain2 でHTML形式で出力したファイルを foo.html とすると、

        p2hindex foo.html

とすれば、foo.html に上書きしてインデックスが付く。

        p2hindex -t -m foo.html

とすれば、foo.html に上書きして、テーブル型のインデックスとタイムスタ
ンプを付ける。

        p2hindex -f -w 30% -fcss p2.css foo.html

とすれば、foo.html に上書きして、フレーム型のインデックスを付ける。イ
ンデックスのフレームは全体の30%の幅で、ファイル"p2.css"をインデックス
フレームのスタイルシートに使う。

4.1.2. オプション説明

以下に、ヘルプで説明しきれなかったオプションの解説を記す。

-i, -f, -t:
 インデックスのスタイルを決める。何も指定しないとリストインデックスにな
 る。各オプションには追加の引数として整数値<n>を与えられる。これを指定
 するとp2hindexはHTMLファイルが<n>行以上の場合のみインデックスを付加す
 る、という制御を行う。これは、複数のHTMLファイルをまとめて変換する際に、
 小さいファイルにはインデックスを付けたくない、という場合に使う。

 たとえば "-f 1000 -t 300" と指定すると、1000行以上のHTMLファイルではフ
 レームインデックスが作られ、300行以上1000行未満のHTMLファイルではテー
 ブルインデックスが作られ、300行未満のHTMLファイルではインデックスは作
 られない。

 -fオプションでは、インデックスをフレームに作るため、元のHTMLファイル
 がfoo.htmlという名前の場合、foo_i.htmlとfoo_b.htmlというファイルを新た
 に作る((fこの"_i"と"_b"という接尾辞は-fisオプションと-fbsオプションで
 指定できる。)) 。foo.htmlがフレームセットとなり、foo_i.htmlがインデッ
 クスで、foo_b.htmlは本文となる。

-w:
 フレームインデックスやテーブルインデックスの幅を決める。引数はHTMLの
 width属性の引数に使われるものなので、ピクセル数や%などで指定できる。

-l:
 インデックスを作る対象の<H?>タグを指定する。通常はplain2の最高レベルの
 セクションは<H2>タグなので、デフォルトでは<H2><H3>をインデックス作成の
 対象にしている。例えば、<H2>〜<H5>を指定する場合は"2-5"を指定する。

-k:
 リストインデックスやテーブルインデックスの出現位置を決める。デフォルト
 または-kオプションの引数に""を指定した場合、HTMLファイルの行頭が"<!--
 toc -->"で始まる最初の行にインデックスを作成する。さもなくば、
 "h[1-9],2"というように文字列と数字を','で区切って指定する。これにより、
 文字列で指定される正規表現を持つタグが現れる何番目の直前にインデックス
 を置くかを指定することができる。例えば"h[1-9],2"ならば、デフォルトでは
 タイトル(<H1>)の後、最初のセクション(<H2>)の前にインデックスが作られる。

-nof:
 フレームインデックスの時、フレーム非対応ブラウザのために<NOFRAMES>タグ
 と本文のコピーを作成する。これを指定しない場合(デフォルト)は本文への簡
 単なリンクを張るのみ。

-mfmt:
 タイムスタンプの書式を指定する。書式はCの関数のstrftime()と同じである。
 このオプションを指定すると、-mオプションも同時に有効になる。デフォル
 トの書式は((mh<tt>))"Last modified at %c"((mh</tt>))である。これを
 ((mh<tt>))-mfmt "Last change %Y%m%d"((mh</tt>))とすると、タイムスタン
 プは例えば"Last change 2002/01/06"となる。

4.1.3 環境変数

環境変数((b P2HINDEX))にコマンドラインに渡すオプションをあらかじめ指定
しておくことができる。((b P2HINDEX))の指定とコマンドラインオプションの
指定が衝突する場合は、コマンドラインオプションが優先される。

4.1.4. その他の機能

HTMLファイルに行頭が"<!-- include ((b file-name)) -->"で始まる行がある
場合、その箇所に((b file-name))で指定したファイルが挿入される。plain2
でこれを出力するには、以下のように書く。

[[E (===この行は含まず===)
[[MH
<!-- include file-name -->
]]M
]]E (===この行は含まず===)

また、以下のように((b file-name))の後に +q の2文字をつけると、インクルー
ドされる部分を<BLOCKQUOTE class="inlcude">タグで囲む。

[[E (===この行は含まず===)
[[MH
<!-- include file-name +q -->
]]M
]]E (===この行は含まず===)

HTMLファイルに行頭が"<!-- no-toc -->"で始まる行がある場合、このファイ
ルにはインデックスは付加されない。

p2hindexはplain2が出力したHTMLファイルを整形するツールであるが、それ以
外のHTMLファイルにも使い方に気をつければ流用できる。

4.2. plain2html

知念@NAISTさんのパッチにplain2htmlというツールが含まれている。テーブ
ルや図をHTMLで使えるようにLaTeXやgroffを使って画像を生成することによ
り、HTML文章を生成するplain2のフロントエンドである。

HTMLテーブル拡張を行なっても、図はやはりHTMLでは出力できないため、テ
キスト線画で手早く絵を描きたい場合にはplain2htmlは役に立つ。

このplain2htmlを修正した。変更点は以下の通り。

 - plain2htmlに対してplain2のオプションを指定できるようにした。
 - ((b -q ))オプションでメッセージを抑制する
 - ((b -c ))オプションでファイルの代わりに標準出力に出力する。
   同時にメッセージも抑制する。
   ((fこのオプションを使うと、コマンドライン上、plain2と見かけが同じになる。))
 - ((b -dpi ))オプションで画像の解像度(dot per inch)を指定できる。
 - ((b -avoid ))オプションで、複数のHTMLファイルの間で画像ファイルのファ
   イルネームがぶつかるのを避ける。
 - ((b -jpeg ))オプションで画像をjpegフォーマットにする。
 - ((b -png ))オプションで画像をpngフォーマットにする。
 - jlatexとplatexのどちらでも使える方を使うようにした。
 - pnmcropを不要にした。
 - pt2htcol.awkを不要にした。
 - jisコード矯正を廃止した。(8bitを通さないawkだと困るが)
 - テーブルや図が含まれていないファイルを指定してもエラーが出ないよ
   うにした。
 - テーブルや図が崩れることがあるバグを修正

plain2htmlの動作に必要なものは以下の通り

 - plain2
 - latex または groff (日本語がOKのもの)
 - csh または tcsh
 - awk, sed
 - ImageMagick (convertコマンド) ((f ImageMagickはgifを圧縮しないもの
   があるので注意すること))
 - ghostscript
